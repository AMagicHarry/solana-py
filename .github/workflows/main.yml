# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    uses: michaelhly/solana-py/.github/workflows/setup.yml@7088188296
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Run linters
        run: |
          make lint

  integration_tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    uses: michaelhly/solana-py/.github/workflows/setup.yml@7088188296
    strategy:
      matrix:
        test_file:
          [
            'async_http_client',
            'async_token_client',
            'http_client',
            'token_client',
          ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run integration tests
        run: |
          poetry run pytest tests/integration/test_{{ matrix.test_file }}.py  --cov

      - name: Upload partial coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage${{ matrix.test_file }}
          path: .coverage

  unit_tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    uses: michaelhly/solana-py/.github/workflows/setup.yml@7088188296
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run unit tests
        run: |
          poetry run pytest unit/  --cov

      - name: Upload partial coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverageunit
          path: .coverage

  coverage:
    needs: [integration_tests, unit_tests]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    uses: michaelhly/solana-py/.github/workflows/setup.yml@7088188296
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup
        uses: ./.github/actions/setup

      - name: Download all coverage artifacts
        # Downloads coverage1, coverage2, etc.
        uses: actions/download-artifact@v2

      - name: Run coverage
        run: |
          coverage combine coverage*/.coverage*
          coverage xml

      - name: Upload coverage to Codecov
        # You may pin to the exact commit or the version.
        # uses: codecov/codecov-action@6004246f47ab62d32be025ce173b241cd84ac58e
        uses: codecov/codecov-action@v1.0.13
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          # Path to coverage file to upload
          file: ./coverage.xml
          env_vars: OS,PYTHON
          # Specify whether or not CI build should fail if Codecov runs into an error during upload
          fail_ci_if_error: true
